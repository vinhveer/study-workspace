/* Copyright (c) 2009 Mustafa OZCAN (http://www.mustafaozcan.net)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 * Version: 1.0.2 (edited by Nguyen Quang Trung 2/12/2010)
 * Requires: jquery.1.3+
 */
jQuery.fn.fixedtableheader = function(options) { 
	var settings = jQuery.extend(options);
        var parent = $(this).attr('id').substring($(this).attr('id').indexOf('_') + 1, $(this).attr('id').length);
        var parent_top = $('body').offset().top;
        var position = 'fixed';
        if (document.getElementById('divp_' + parent)) {
            parent = '#divp_' + parent;
            parent_top = $(parent).offset().top;
            position = 'absolute';
        } else {
            parent = 'body';
        }

	this.each(function(i) { 
		var $tbl = $(this); 
		var $tblhfixed = $tbl.find("thead tr");
		var headerelement = "th"; 
			if ($tblhfixed.find(headerelement).length > 0) { 
				$tblhfixed.find(headerelement).each(function() { 
					$(this).css("width", $(this).width());
				});

				var $clonedTable = $tbl.clone().empty();
                                   
				var tblwidth = GetTblWidth($tbl); 

                                $clonedTable.attr("id", "fixedtableheader" + i).css({ "position": "absolute", "top": "0", "left": "0px" }).append($tblhfixed.clone()).width(tblwidth).hide().appendTo($(parent));
				$(window).scroll(function() {
                                        if (parent == 'body') {
                                            if (jQuery.browser.msie) $clonedTable.css({ "position": "absolute", "top": $(window).scrollTop(), "left": $tbl.offset().left });
                                            else $clonedTable.css({ "position": "fixed", "top": "0", "left": $tbl.offset().left - $(window).scrollLeft() });
                                            var sctop = $(window).scrollTop();
                                            var elmtop = $tblhfixed.offset().top;
                                            if (sctop > elmtop && sctop <= (elmtop + $tbl.height() - $tblhfixed.height())) $clonedTable.show();
                                            else $clonedTable.hide();
                                        } else {
                                            $clonedTable.css({"position": "absolute", "top": $(window).scrollTop() - parent_top, "left": "0px"});

                                            var sctop = $(window).scrollTop();

                                            if (sctop - $(parent).offset().top > 0 && sctop - $(parent).offset().top <= ($tbl.height() - $tblhfixed.height())) $clonedTable.show();
                                            else $clonedTable.hide();
                                        }
				});

                                /*$(window).resize(function() {
                                        if ($clonedTable.outerWidth() != $tbl.outerWidth()) {
                                                $tblhfixed.find(headerelement).each(function(index) {
                                                        var w = $(this).width();$(this).css("width", w);
                                                        $clonedTable.find(headerelement).eq(index).css("width", w);
                                                });
                                                $clonedTable.width($tbl.outerWidth());
                                        }
                                        $clonedTable.css("left", $tbl.offset().left);
                                });*/
			}
	}); 
	function GetTblWidth($tbl) {
		var tblwidth = $tbl.outerWidth(); 
		return tblwidth; 
	} 
};

var colsWidth = new Array();
jQuery.fn.fixedtableheaderExt = function(options) { 
	var settings = jQuery.extend({parent: window}, options); 
	this.each(function(i) { 
		var $tbl = $(this); 
		var $tblhfixed = $tbl.find("thead tr");
		var headerelement = "th"; 
			if ($tblhfixed.find(headerelement).length > 0) {
				var colIndex = 0;
				$tblhfixed.find(headerelement).each(function() { 
					$(this).css("width", $(this).width());
					colsWidth[colIndex] = $(this).width();
					colIndex++;
				});
				var $clonedTable = $tbl.clone().empty(); 
				var tblwidth = GetTblWidth($tbl); 
				$clonedTable.attr("id", "fixedtableheader" + i).css({"position": "absolute", "top": "0", "left": $tbl.offset().left}).append($tblhfixed.clone()).width(tblwidth).hide().appendTo($(settings.parent)); 

				$(settings.parent).scroll(function() {
					$clonedTable.css({"position": "absolute", "top": $(settings.parent).scrollTop(), "left": "0px"}); 
					
					var sctop = $(settings.parent).scrollTop(); 
					if (sctop > 0) $clonedTable.show(); 
					else $clonedTable.hide(); 
				}); 
				$(settings.parent).resize(function() { 
					if ($clonedTable.outerWidth() != $tbl.outerWidth()) { 
						$tblhfixed.find(headerelement).each(function(index) { 
							var w = $(this).width();$(this).css("width", w); 
							$clonedTable.find(headerelement).eq(index).css("width", w); 
						}); 
						$clonedTable.width($tbl.outerWidth());
					} 
					$clonedTable.css("left", $tbl.offset().left); 
				}); 
			}
	}); 
	function GetTblWidth($tbl) {
		var tblwidth = $tbl.outerWidth(); 
		return tblwidth; 
	} 
};